;; ------------------------------------------------------------
;; -----------------------[ BAR WIDGETS ]----------------------
;; ------------------------------------------------------------

;; ------- Variables --------

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

;; ------- Inside widgets --------

(defwidget time []
  (label :class "time" :text time)
)

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "start"
    {music != "" ? "ðŸŽµ  ${music}" : ""}))

;; ------- Structure widget --------

(defwidget bar []
  (overlay 
   (background)
   (foreground)))

(defwidget background []
  (box :class "background" :width 410 :height 80 :halign "center" :valign "center" 
      (box :class "shiny_thing-1 ${hovered_wrkspc != -1 ? "hovered" : "unhovered"}"
          ;; :style `margin-left: ${hovered_wrkspc!=-1 ? (hovered_wrkspc - 1) * 38 
          ;;                       : jq(wrkspcs,' to_entries[] | select(.value.visible==true) | .key') * 38}px`
          :style `margin-left: ${hovered_wrkspc == -1 ? 
                                (jq(wrkspcs, 'to_entries[] | select(.value.visible==true and .value.monitor=="HDMI-A-1")')[0]?.key - 1) * 37

                                : (hovered_wrkspc - 1) * 38 }px`
          :valign "start" :halign "start"
          :vexpand false :hexpand false
          :height 80 :width 80
      )
      (box :class "shiny_thing-2 ${hovered_wrkspc != -1 ? "hovered" : "unhovered"}"
          ;; :style `margin-left: ${hovered_wrkspc!=-1 ? (hovered_wrkspc - 1) * 38 
          ;;                       : jq(wrkspcs,' to_entries[] | select(.value.visible==true) | .key') * 38}px`
          :style `margin-left: ${hovered_wrkspc == -1 ? 
                                (jq(wrkspcs, 'to_entries[] | select(.value.visible==true and .value.monitor=="HDMI-A-2")')?.key - 1) * 37
                                : (hovered_wrkspc - 1) * 38 }px`
          :valign "start" :halign "start"
          :vexpand false :hexpand false
          :height 80 :width 80
      )

  )
)

(defwidget foreground []
  (box :class "foreground"  :orientation "vertical"
    (centerbox  :orientation "horizontal" :class "bar"
       (left_box)
       (workspaces_holder) 
       (right_box))
     (bottom_space)))

(defwidget left_box []
  (box :class "left_box" :orientation "h" :space-evenly false :spacing 5 :halign "start"
    (time)
    (music)
  ))

(defwidget workspaces_holder []
  (box :class "workspaces_holder" ))

(defwidget right_box []
  (box :class "right_box" :orientation "h" :space-evenly false :spacing 5 :halign "end"
    (metric :label "ram"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "disk"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    (volume)
    (updates)
))

(defwidget bottom_space []
    (box :class "bottom_space"
      (box :halign "start"
          :class "left_corner")
      (revealer :halign "end"
          :class "right_corner"
          (box :class "circle"))))

;; ------- Window --------

(defwindow bar 
  :monitor 1
  :stacking "bg"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "80px" ;; quitar
                      :anchor "top center")
  ;; :reserve (struts :side "top" :distance "20px")
  (bar))
